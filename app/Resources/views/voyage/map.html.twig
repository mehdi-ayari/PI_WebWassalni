
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no" />
    <script src="https://api.mapbox.com/mapbox-gl-js/v1.9.1/mapbox-gl.js"></script>
    <link href="https://api.mapbox.com/mapbox-gl-js/v1.9.1/mapbox-gl.css" rel="stylesheet" />
    <style>
        body { margin: 0; padding: 0; }
        #map { position: absolute; top: 0%; bottom: 0%; width: 100% ; left: 0% }
    </style>
    <title>Voyage map</title>
</head>
<body>
<script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v4.0.2/mapbox-gl-directions.js"></script>
<link
        rel="stylesheet"
        href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v4.0.2/mapbox-gl-directions.css"
        type="text/css"
/>
<div id="map">

</div>

</div>
<script src="https://unpkg.com/es6-promise@4.2.4/dist/es6-promise.auto.min.js"></script>
<script src="https://unpkg.com/@mapbox/mapbox-sdk/umd/mapbox-sdk.min.js"></script>
<script>
    mapboxgl.accessToken = 'pk.eyJ1IjoiamF3aGFyY2giLCJhIjoiY2s2dGVvOGlpMDB3NDNtcHVzcmxhdmR2YyJ9.VHALBLsdspgxm5eIuC270Q';
    var mapboxClient = mapboxSdk({ accessToken: mapboxgl.accessToken });
    mapboxClient.geocoding
        .forwardGeocode({
            query: 'Tunisia, {{ voyage.reservationRes.destination }}',
            autocomplete: false,
            limit: 1
        })
        .send()
        .then(function(response) {
            if (
                response &&
                response.body &&
                response.body.features &&
                response.body.features.length
            ) {
                var feature = response.body.features[0];
                if ("geolocation" in navigator) {
                    navigator.geolocation.getCurrentPosition(position => {
                        var map = new mapboxgl.Map({
                            // container id specified in the HTML
                            container: 'map',

                            // style URL
                            style: 'mapbox://styles/mapbox/streets-v11',

                            // initial position in [lon, lat] format
                            center: [position.coords.longitude, position.coords.latitude],

                            // initial zoom

                            zoom: 14
                        });

                      map.addControl(
                        new mapboxgl.GeolocateControl({
                            positionOptions: {
                                enableHighAccuracy: true
                            },
                            trackUserLocation: true
                        })
                    );
                    map.addControl(new mapboxgl.NavigationControl());
                        var directions = new MapboxDirections({
                            accessToken: mapboxgl.accessToken
                        });

                        map.addControl(directions,'top-right');

                        map.on('load',  function() {
                            var start = [position.coords.longitude, position.coords.latitude];
                            var end = feature.center;
                            directions.setOrigin([position.coords.longitude, position.coords.latitude]); // can be address in form setOrigin("12, Elm Street, NY")
                            directions.setDestination(feature.center); // can be address
                            var url = 'https://api.mapbox.com/directions/v5/mapbox/driving/' + position.coords.longitude + ',' + position.coords.latitude + ';' + end[0] + ',' + end[1] + '?steps=true&geometries=geojson&access_token=' + mapboxgl.accessToken;
                            var req = new XMLHttpRequest();
                            req.open('GET', url, true);
                            req.onload = function () {
                                var json = JSON.parse(req.response);
                                var data = json.routes[0];
                                var distance = data.distance;
                                document.getElementById('output').innerHTML = distance;
                                if (history.pushState) {
                                    window.history.pushState(distance, "Page Title", "{{ path('voyage_map', { 'idVoyage': voyage.idVoyage }) }}?distance=" + distance + "&dest=" + start);
                                } else {
                                    window.location.href = "{{ path('voyage_map', { 'idVoyage': voyage.idVoyage }) }}?distance=" + distance + "&dest=" + start;
                                }
                            };
                        req.send();

                        })

                    });
                }
                else {
                    var map = new mapboxgl.Map({
                        container: 'map',
                        style: 'mapbox://styles/mapbox/streets-v11',
                        center: feature.center,
                        zoom: 10
                    });}}
        });


</script>
<div class="directions-control directions-control-directions">
    <div class="mapbox-directions-component mapbox-directions-route-summary">
        <h1 id="output"> </h1> metres
        <h4 id="datetime" > date : {{ voyage.dateVoyage|date('d/m/Y H:i:s') }}</h4>
        <h4> reservation : {{ voyage.reservationRes.destination }}</h4>
    </div></div>


</body>
